{"ast":null,"code":"import _defineProperty from \"/Users/j.mac/Documents/dev/reactLearn/react_todo/react_todo_v3_hook/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/j.mac/Documents/dev/reactLearn/react_todo/react_todo_v3_hook/src/component/TodoFooter.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useCallback } from 'react';\nimport Checkbox from \"./Checkbox\";\nimport TodosContext from \"../context/TodosContext\";\n\nconst TodoFooter = () => {\n  const _useContext = useContext(TodosContext),\n        state = _useContext.state,\n        action = _useContext.action;\n\n  const chkAllCompletedTodos = useCallback(e => {\n    action.setTodos(todos => todos.map(todo => _objectSpread({}, todo, {\n      completed: e.target.checked\n    })));\n  }, [action]);\n  const getActiveTodos = useCallback(() => {\n    return state.todos.filter(todo => todo.completed !== true).length;\n  }, [state.todos]);\n  const genCompletedTodos = useCallback(() => {\n    return state.todos.filter(todo => todo.completed === true).length;\n  }, [state.todos]); // const genCompletedTodos = useCallback( () => {\n  //   return state.todos.length - getActiveTodos().length;\n  // }, [ state.todos.length, getActiveTodos ] );\n\n  const removeCompletedTodos = useCallback(() => {\n    action.setTodos(todos => todos.filter(todo => todo.completed === false));\n  }, [action]);\n  return React.createElement(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"complete-all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    id: \"ck-complete-all\",\n    onChange: chkAllCompletedTodos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"ck-complete-all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Mark all as complete\")), React.createElement(\"div\", {\n    className: \"clear-completed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: removeCompletedTodos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Clear completed (\", React.createElement(\"span\", {\n    className: \"completed-todos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, genCompletedTodos()), \")\"), React.createElement(\"strong\", {\n    className: \"active-todos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" \", getActiveTodos(), \" \"), \"items left\"));\n};\n\nexport default React.memo(TodoFooter);","map":{"version":3,"sources":["/Users/j.mac/Documents/dev/reactLearn/react_todo/react_todo_v3_hook/src/component/TodoFooter.js"],"names":["React","useContext","useCallback","Checkbox","TodosContext","TodoFooter","state","action","chkAllCompletedTodos","e","setTodos","todos","map","todo","completed","target","checked","getActiveTodos","filter","length","genCompletedTodos","removeCompletedTodos","memo"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,WAA5B,QAA+C,OAA/C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA,sBACGJ,UAAU,CAAEG,YAAF,CADb;AAAA,QACfE,KADe,eACfA,KADe;AAAA,QACRC,MADQ,eACRA,MADQ;;AAGvB,QAAMC,oBAAoB,GAAGN,WAAW,CAACO,CAAC,IAAI;AAC5CF,IAAAA,MAAM,CAACG,QAAP,CAAiBC,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAWC,IAAI,sBAAWA,IAAX;AAAiBC,MAAAA,SAAS,EAAEL,CAAC,CAACM,MAAF,CAASC;AAArC,MAAf,CAA1B;AACD,GAFuC,EAErC,CAAET,MAAF,CAFqC,CAAxC;AAIA,QAAMU,cAAc,GAAGf,WAAW,CAAE,MAAM;AACxC,WAAOI,KAAK,CAACK,KAAN,CAAYO,MAAZ,CAAoBL,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,IAA/C,EAAsDK,MAA7D;AACD,GAFiC,EAE/B,CAAEb,KAAK,CAACK,KAAR,CAF+B,CAAlC;AAIA,QAAMS,iBAAiB,GAAGlB,WAAW,CAAC,MAAM;AAC1C,WAAOI,KAAK,CAACK,KAAN,CAAYO,MAAZ,CAAoBL,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,IAA/C,EAAsDK,MAA7D;AACD,GAFoC,EAElC,CAAEb,KAAK,CAACK,KAAR,CAFkC,CAArC,CAXuB,CAevB;AACA;AACA;;AAEA,QAAMU,oBAAoB,GAAGnB,WAAW,CAAE,MAAM;AAC5CK,IAAAA,MAAM,CAACG,QAAP,CAAiBC,KAAK,IAAIA,KAAK,CAACO,MAAN,CAAcL,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,KAAzC,CAA1B;AACD,GAFqC,EAEnC,CAAEP,MAAF,CAFmC,CAAxC;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,QAAQ,EAAGC,oBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAO,IAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,CADF,EAQE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAGa,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,iBAAiB,EADrB,CAFF,MADF,EAQE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GADJ,EAEIH,cAAc,EAFlB,EAEwB,GAFxB,CARF,eARF,CADF;AAyBD,CAhDD;;AAkDA,eAAejB,KAAK,CAACsB,IAAN,CAAYjB,UAAZ,CAAf","sourcesContent":["import React, { useContext, useCallback } from 'react';\nimport Checkbox from \"./Checkbox\";\nimport TodosContext from \"../context/TodosContext\";\n\nconst TodoFooter = () => {\n  const { state, action } = useContext( TodosContext );\n\n  const chkAllCompletedTodos = useCallback(e => {\n    action.setTodos( todos => todos.map( todo => ( { ...todo, completed: e.target.checked } ) ) );\n  }, [ action ]);\n\n  const getActiveTodos = useCallback( () => {\n    return state.todos.filter( todo => todo.completed !== true ).length;\n  }, [ state.todos ] );\n\n  const genCompletedTodos = useCallback(() => {\n    return state.todos.filter( todo => todo.completed === true ).length;\n  }, [ state.todos ] );\n\n  // const genCompletedTodos = useCallback( () => {\n  //   return state.todos.length - getActiveTodos().length;\n  // }, [ state.todos.length, getActiveTodos ] );\n\n  const removeCompletedTodos = useCallback( () => {\n      action.setTodos( todos => todos.filter( todo => todo.completed === false ) );\n    }, [ action ] );\n\n  return (\n    <div className=\"footer\">\n      <div className=\"complete-all\">\n        <Checkbox\n          id=\"ck-complete-all\"\n          onChange={ chkAllCompletedTodos }\n        />\n        <label htmlFor=\"ck-complete-all\">Mark all as complete</label>\n      </div>\n      <div className=\"clear-completed\">\n        <button className=\"btn\" onClick={ removeCompletedTodos }>\n          Clear completed (\n          <span className=\"completed-todos\">\n            { genCompletedTodos() }\n          </span>\n          )\n        </button>\n        <strong className=\"active-todos\">\n          { \" \" }\n          { getActiveTodos() }{ \" \" }\n        </strong>\n        items left\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo( TodoFooter );"]},"metadata":{},"sourceType":"module"}