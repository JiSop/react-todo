{"ast":null,"code":"import _defineProperty from \"/Users/j.mac/Documents/dev/reactLearn/react_todo/react_todo_v2_hook/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/j.mac/Documents/dev/reactLearn/react_todo/react_todo_v2_hook/src/component/TodoList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\n\nconst TodoList = ({\n  todos,\n  setTodos,\n  tabState\n}) => {\n  const removeTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const toggleChk = id => {\n    setTodos(todos.map(todo => todo.id === id ? _objectSpread({}, todo, {\n      completed: !todo.completed\n    }) : todo));\n  };\n\n  return React.createElement(\"ul\", {\n    className: \"todos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, todos.filter(todo => {\n    if (tabState === \"Active\") {\n      return !todo.completed;\n    }\n\n    if (tabState === \"Completed\") {\n      return todo.completed;\n    }\n\n    return true;\n  }).map(todo => {\n    return React.createElement(\"li\", {\n      className: \"todo-item\",\n      key: todo.id + todo.content,\n      id: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"custom-checkbox\",\n      type: \"checkbox\",\n      id: \"ck-\".concat(todo.id),\n      checked: todo.completed,\n      onChange: () => {\n        toggleChk(todo.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"ck-\".concat(todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, todo.content), React.createElement(\"i\", {\n      className: \"remove-todo far fa-times-circle\",\n      onClick: () => {\n        removeTodo(todo.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/j.mac/Documents/dev/reactLearn/react_todo/react_todo_v2_hook/src/component/TodoList.js"],"names":["React","TodoList","todos","setTodos","tabState","removeTodo","id","filter","todo","toggleChk","map","completed","content"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AAElD,QAAMC,UAAU,GAAGC,EAAE,IAAI;AACvBH,IAAAA,QAAQ,CAAED,KAAK,CAACK,MAAN,CAAcC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAAlC,CAAF,CAAR;AACD,GAFD;;AAIA,QAAMG,SAAS,GAAGH,EAAE,IAAI;AACtBH,IAAAA,QAAQ,CAAED,KAAK,CAACQ,GAAN,CAAWF,IAAI,IACvBA,IAAI,CAACF,EAAL,KAAYA,EAAZ,qBAAsBE,IAAtB;AAA4BG,MAAAA,SAAS,EAAE,CAACH,IAAI,CAACG;AAA7C,SAA2DH,IADnD,CAAF,CAAR;AAED,GAHD;;AAKA,SACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIN,KAAK,CACJK,MADD,CACSC,IAAI,IAAI;AACf,QAAKJ,QAAQ,KAAK,QAAlB,EAA6B;AAC3B,aAAO,CAACI,IAAI,CAACG,SAAb;AACD;;AACD,QAAKP,QAAQ,KAAK,WAAlB,EAAgC;AAC9B,aAAOI,IAAI,CAACG,SAAZ;AACD;;AACD,WAAO,IAAP;AACD,GATD,EAUCD,GAVD,CAUMF,IAAI,IAAI;AACZ,WACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAA0B,MAAA,GAAG,EAAGA,IAAI,CAACF,EAAL,GAAUE,IAAI,CAACI,OAA/C;AAAyD,MAAA,EAAE,EAAGJ,IAAI,CAACF,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,EAAE,eAAUE,IAAI,CAACF,EAAf,CAHJ;AAIE,MAAA,OAAO,EAAGE,IAAI,CAACG,SAJjB;AAKE,MAAA,QAAQ,EAAG,MAAM;AACfF,QAAAA,SAAS,CAAED,IAAI,CAACF,EAAP,CAAT;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE;AAAO,MAAA,OAAO,eAAUE,IAAI,CAACF,EAAf,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCE,IAAI,CAACI,OAA5C,CAVF,EAWE;AACE,MAAA,SAAS,EAAC,iCADZ;AAEE,MAAA,OAAO,EAAG,MAAM;AACdP,QAAAA,UAAU,CAAEG,IAAI,CAACF,EAAP,CAAV;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAoBD,GA/BD,CADJ,CADF;AAoCD,CA/CD;;AAiDA,eAAeL,QAAf","sourcesContent":["import React from 'react';\n\nconst TodoList = ({ todos, setTodos, tabState }) => {\n\n  const removeTodo = id => {\n    setTodos( todos.filter( todo => todo.id !== id ) );\n  };\n\n  const toggleChk = id => {\n    setTodos( todos.map( todo =>\n      todo.id === id ? { ...todo, completed: !todo.completed } : todo ) );\n  };\n\n  return (\n    <ul className=\"todos\">\n      { todos\n        .filter( todo => {\n          if ( tabState === \"Active\" ) {\n            return !todo.completed;\n          }\n          if ( tabState === \"Completed\" ) {\n            return todo.completed;\n          }\n          return true;\n        } )\n        .map( todo => {\n          return (\n            <li className=\"todo-item\" key={ todo.id + todo.content } id={ todo.id }>\n              <input\n                className=\"custom-checkbox\"\n                type=\"checkbox\"\n                id={ `ck-${ todo.id }` }\n                checked={ todo.completed }\n                onChange={ () => {\n                  toggleChk( todo.id );\n                } }\n              />\n              <label htmlFor={ `ck-${ todo.id }` }>{ todo.content }</label>\n              <i\n                className=\"remove-todo far fa-times-circle\"\n                onClick={ () => {\n                  removeTodo( todo.id );\n                } }\n              />\n            </li>\n          );\n        } ) }\n    </ul>\n  );\n};\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}