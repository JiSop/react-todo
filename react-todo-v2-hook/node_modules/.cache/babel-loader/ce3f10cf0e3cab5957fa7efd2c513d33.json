{"ast":null,"code":"import _defineProperty from \"/Users/j.mac/Documents/dev/reactLearn/react_todo/react_todo_v2_hook/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/j.mac/Documents/dev/reactLearn/react_todo/react_todo_v2_hook/src/component/TodoFooter.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\n\nconst TodoFooter = ({\n  todos,\n  setTodos\n}) => {\n  const chkAllCompletedTodos = e => {\n    setTodos(todos.map(todo => _objectSpread({}, todo, {\n      completed: e.target.checked\n    })));\n    console.log(todos);\n  };\n\n  const removeCompletedTodos = () => {\n    setTodos(getActiveTodos());\n  };\n\n  const getActiveTodos = () => {\n    return todos.filter(todo => todo.completed === false);\n  };\n\n  const genCompletedTodos = () => {\n    return todos.length - getActiveTodos().length;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"complete-all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"custom-checkbox\",\n    type: \"checkbox\",\n    id: \"ck-complete-all\",\n    onChange: chkAllCompletedTodos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"ck-complete-all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Mark all as complete\")), React.createElement(\"div\", {\n    className: \"clear-completed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: removeCompletedTodos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Clear completed (\", React.createElement(\"span\", {\n    className: \"completed-todos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, genCompletedTodos()), \")\"), React.createElement(\"strong\", {\n    className: \"active-todos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" \", getActiveTodos().length, \" \"), \"items left\"));\n};\n\nexport default TodoFooter;","map":{"version":3,"sources":["/Users/j.mac/Documents/dev/reactLearn/react_todo/react_todo_v2_hook/src/component/TodoFooter.js"],"names":["React","TodoFooter","todos","setTodos","chkAllCompletedTodos","e","map","todo","completed","target","checked","console","log","removeCompletedTodos","getActiveTodos","filter","genCompletedTodos","length"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAE1C,QAAMC,oBAAoB,GAAGC,CAAC,IAAI;AAChCF,IAAAA,QAAQ,CACND,KAAK,CAACI,GAAN,CAAWC,IAAI,sBAAWA,IAAX;AAAiBC,MAAAA,SAAS,EAAEH,CAAC,CAACI,MAAF,CAASC;AAArC,MAAf,CADM,CAAR;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAaV,KAAb;AACD,GAJD;;AAMA,QAAMW,oBAAoB,GAAG,MAAM;AACjCV,IAAAA,QAAQ,CACNW,cAAc,EADR,CAAR;AAGD,GAJD;;AAMA,QAAMA,cAAc,GAAG,MAAM;AAC3B,WAAOZ,KAAK,CAACa,MAAN,CAAcR,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,KAAzC,CAAP;AACD,GAFD;;AAIA,QAAMQ,iBAAiB,GAAG,MAAM;AAC9B,WAAOd,KAAK,CAACe,MAAN,GAAeH,cAAc,GAAGG,MAAvC;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,EAAE,EAAC,iBAHL;AAIE,IAAA,QAAQ,EAAGb,oBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAO,IAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPF,CADF,EAUE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAGS,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIG,iBAAiB,EADrB,CAFF,MADF,EAQE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GADJ,EAEIF,cAAc,GAAGG,MAFrB,EAE+B,GAF/B,CARF,eAVF,CADF;AA2BD,CAjDD;;AAmDA,eAAehB,UAAf","sourcesContent":["import React from 'react';\n\nconst TodoFooter = ({ todos, setTodos }) => {\n\n  const chkAllCompletedTodos = e => {\n    setTodos(\n      todos.map( todo => ( { ...todo, completed: e.target.checked } ) ) );\n    console.log( todos );\n  };\n\n  const removeCompletedTodos = () => {\n    setTodos(\n      getActiveTodos()\n    );\n  };\n\n  const getActiveTodos = () => {\n    return todos.filter( todo => todo.completed === false );\n  };\n\n  const genCompletedTodos = () => {\n    return todos.length - getActiveTodos().length;\n  };\n\n  return (\n    <div className=\"footer\">\n      <div className=\"complete-all\">\n        <input\n          className=\"custom-checkbox\"\n          type=\"checkbox\"\n          id=\"ck-complete-all\"\n          onChange={ chkAllCompletedTodos }\n        />\n        <label htmlFor=\"ck-complete-all\">Mark all as complete</label>\n      </div>\n      <div className=\"clear-completed\">\n        <button className=\"btn\" onClick={ removeCompletedTodos }>\n          Clear completed (\n          <span className=\"completed-todos\">\n            { genCompletedTodos() }\n          </span>\n          )\n        </button>\n        <strong className=\"active-todos\">\n          { \" \" }\n          { getActiveTodos().length }{ \" \" }\n        </strong>\n        items left\n      </div>\n    </div>\n  );\n};\n\nexport default TodoFooter;"]},"metadata":{},"sourceType":"module"}